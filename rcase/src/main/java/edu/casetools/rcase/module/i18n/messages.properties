ScopePaletteGroup.Links = Links
ScopePaletteGroup.Nodes = Nodes

SequencePaletteGroup.Common          = Common
SequencePaletteGroup.InformationFlow = Information Flows

StatePaletteGroup.Common = Common

StatikPaletteGroup.Class           = Class model
StatikPaletteGroup.Common          = Common
StatikPaletteGroup.Component       = Component model
StatikPaletteGroup.Import          = Imports links
StatikPaletteGroup.InformationFlow = Information Flows
StatikPaletteGroup.Instance        = Instance model
StatikPaletteGroup.Package         = Package

ContextPaletteGroup.Bloc                = Nodes
ContextPaletteGroup.Notes				= Notes
ContextPaletteGroup.Dependency          = Relations
ContextPaletteGroup.Freedrawing         = Free drawing
ContextPaletteGroup.Import              = Imports links
ContextPaletteGroup.InformationFlow     = Information Flows
ContextPaletteGroup.Instance            = Instance model
ContextPaletteGroup.NotesAndConstraints = Notes and constraints
ContextPaletteGroup.Port                = Ports

Names.SituationalParameter = Situational Parameter
Names.UseCase		   = Use Case
Names.RequirementContainer = Requirement Container
Names.Requirement = Requirement
Names.SituationOfInterest = Situation of Interest
Names.TestCase = Test Case
Names.Diagrams.Requirements = RequirementDiagram

Ui.Command.Create.CreateContextDependencyDiagram.Label = Context Dependency Diagram

Info.Session.Create                      = Create {0} 

Ui.Command.CreateContextRequirementsDiagram.Details              = A requirement specifies a capability or condition that must be satisfied. A requirement can define a function that a system must perform or a performance condition a system must achieve. A requirement can appear in other diagrams to show its relationships to other model elements. Requirements have properties and links to other elements (requirements or model elements).
Ui.Command.CreateContextRequirementsDiagram.Information          = Create a requirement diagram
Ui.Command.CreateContextRequirementsDiagram.Label                = Requirement diagram
Ui.Command.CreateContextRequirementsDiagram.Tooltip              = Create a requirement diagram

Ui.Command.CreateUseCaseDiagram.Details              = A use case is a methodology used in system analysis to identify, clarify, and organise system requirements. 
Ui.Command.CreateUseCaseDiagram.Information          = Create a use case diagram
Ui.Command.CreateUseCaseDiagram.Label                = Use Case Diagram
Ui.Command.CreateUseCaseDiagram.Tooltip              = Create a use case diagram

Ui.Derive.From                                                         = Derived from
Ui.Derive.To                                                           = Derived
Ui.Copy.From                                                           = Copied from
Ui.Copy.To                                                             = Copied
Ui.Part.From                                                           = Part of
Ui.Part.To															   = Part
Ui.Refine.From                                                         = Refines
Ui.Refine.To                                                           = Refined by
Ui.Satisfy.From                                                        = Satisfies
Ui.Satisfy.To                                                          = Satisfied by
Ui.Trace.From                                                          = Traced from
Ui.Trace.To                                                            = Traced to
Ui.Verify.From                                                         = Verifies
Ui.Verify.To                                                           = Verified by

Ui.ContextDependency.From                                              = Depended from
Ui.ContextDependency.To                                                = Depends on
Ui.Identifies.From                                                     = Identified from
Ui.Identifies.To                                                       = Identifies

Ui.SituationalParameter.Property.TagId                             = Id
Ui.SituationalParameter.Property.TagCost						   = Cost
Ui.SituationalParameter.Property.TagStatus					  	   = Status
Ui.SituationalParameter.Property.TagStatus.Raw					   = Raw
Ui.SituationalParameter.Property.TagStatus.PreProcessed			   = Pre-processed
Ui.SituationalParameter.Property.TagStatus.Atomic				   = Atomic
Ui.SituationalParameter.Property.TagStatus.Aggregate			   = Aggregate
Ui.SituationalParameter.Property.TagCreationProcess                = Creation Process
Ui.SituationalParameter.Property.TagCreationProcess.Sensed		   = Sensed
Ui.SituationalParameter.Property.TagCreationProcess.PreProcessed   = Pre-processed
Ui.SituationalParameter.Property.TagCreationProcess.Derived         = Derived
Ui.SituationalParameter.Property.TagUserInvolvement				   = UserInvolvement
Ui.SituationalParameter.Property.TagUserInvolvement.Explicit	   = Explicit
Ui.SituationalParameter.Property.TagUserInvolvement.Implicit	   = Implicit
Ui.SituationalParameter.Property.TagUserInvolvement.Disassociated  = Disassociated
Ui.SituationalParameter.Property.TagVolatility					   = Volatility
Ui.SituationalParameter.Property.TagVolatility.Static			   = Static
Ui.SituationalParameter.Property.TagVolatility.Profiled		  	   = Profiled
Ui.SituationalParameter.Property.TagVolatility.Dynamic			   = Dynamic

Ui.Requirement.Property.TagId							     	   = Id
Ui.Requirement.Property.TagText								       = Text

Ui.SituationOfInterest.Property.TagId							   = Id
Ui.SituationOfInterest.Property.TagText							   = Text

ContainerTable.Title		  = Requirement Container Edition 
DependencyTable.Title		  = Dependency Table 

Excel.Author = 
Excel.Company = 
Excel.Application = Requirements for Context-Aware Systems Engineering (RC-ASE)

Dialogs.Title.Export = Export 

Menu.Container.New = New Requirement
Menu.Container.Delete = Delete Requirement
Menu.Container.Refresh = Refresh
Menu.Container.Export = Export
Menu.Container.Import = Import
Menu.Container.Combobox.Label = Requirement Container:

Menu.Matrix.Filter.Columns = Filter Columns
Menu.Matrix.Filter.Rows = Filter Rows
Menu.Matrix.Refresh = Refresh
Menu.Matrix.Export = Export
Menu.Matrix.Import = Import
Menu.Matrix.Combobox.Label = Link Type:

Buttons.Accept = Accept
Buttons.Cancel = Cancel

DualList.label.Stereotypes = Stereotypes:
DualList.label.FilteredStereotypes = Filtered Stereotypes:

Dialogs.Name.Column = Column
Dialogs.Name.Row    = Row

Table.Container.Header.Name 	   = Name
Table.Container.Header.Id          = Id
Table.Container.Header.Description = Description

Table.Dependency.Header.Name = Dependency Table 

Info.Error                    = I/O Error
Error.ImpossibleToWriteFile   = It was impossible to write the file.

UseCasePaletteGroup.Nodes     = Nodes

ExcelError.NullName = The name of the excel sheet cannot be null
ExcelError.EmptyName = The name of the excel sheet must not be empty string
ExcelError.InvalidName = Invalid excel sheet name '
ExcelError.InvalidNameTip = '. Sheet names must not begin or end with (').
ExcelError.InvalidChar = Invalid char (
ExcelError.InvalidCharIndex = ) found at index (
ExcelError.InvalidCharName = ) in sheet name '
ExcelError.InvalidState = Invalid sheet state: 
ExcelError.InvalidStateTip = "Sheet state must have Workbook.SHEET_STATE_* constants like format"
